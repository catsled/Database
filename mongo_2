自定义查询条件(js)
 
在mongo中,有很多内置的比较符,但是他们的组合有时无法满足想要的要求，所以需要自定义条件.

{$where:function(){
	return <boolean:true>;
	}
}

在函数体中可以编写需要的条件.

---------------------------------------------------------------------------

查询指定位置,指定数量的数据(skip,limit)

skip:用来跳过指定数量的数据
limit:用来限定数据的个数

例: db.collection.find().skip(2).limit(3)

	跳过前两个数据然后再在后面的数据中取至多三个数据

---------------------------------------------------------------------------

投影:打印指定的字段

     db.collection.find({condition},{field1:1,field2:1,field3:0})

     其中(1)代表显示,(0)代表不显示

---------------------------------------------------------------------------

排序:将查询到的结果按照关键字进行排序(sort)

	 db.collection.find({}).sort({field1:1,field2：-1})

	 (1)代表升序排序,(-1)代表降序排序
	 sort将查询到的结果以(field1)为关键字进行升序排序,如果(field1)排序后得到的结果相同,那么再以(field2)为关键字进行降序排序.

---------------------------------------------------------------------------

统计:统计查询的结果的数量(count)
  
	 db.collection.find({condition}).count()
	 or
	 db.collection.count({condition})

---------------------------------------------------------------------------

消除重复:消除重复并查询(distinct)

     db.collection.distinct('filed',{condition})

     distinct以(filed)为关键字对满足条件的结果进行去重(重复的结果只保留一个)

     这个对我来说不太好理解,但是经过测试可以得到: 结果只会得到(filed)对应的值.

---------------------------------------------------------------------------


