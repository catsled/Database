aggregate高级应用

mongo中很多管道都可以进行组合使用.

---------------------------------------------------------------------------
常用组合:
        $match + $group + $project (将匹配到的数据进行分组然后选择要打印的信息)

        $skip + $limit (跳过指定个数的数据然后获取相对应数量的数据)

        $group + $sort (将分组后的数据进行排序)

        ...

        总之,aggregate中的管道是按照顺序执行的,每一个管道接收到的数据都是前一个管道输出的数据.

---------------------------------------------------------------------------
例:

1> 查询所有年龄大于20的学生,然后以性别分组,最后打印出每组的平均年龄和组员信息.
   db.stu.aggregate(
       {$match:{age:{$gt:20}}},
       {$group:{_id:'$gender',avg_age:{$avg:'$age'},name:{$push:'$name'}}},
       {$project:{avg_age:1,_id:0,name:1}}
   )

2> 跳过年龄最大的学生,然后取两个学生计算他们的平均年龄
   db.stu.aggregate(
       {$sort:{age:-1}},
       {$skip:1},
       {$limit:2},
       {$group:{_id:null,name:{$push:'$name'},age:{$push:'$age'},avg_age:{$avg:'$age'}}},
       )
   
3> 按性别分组,根据他们的平均年龄进行升序排序.
	db.stu.aggregate(
	   {$group:{_id:'$gender',avg_age:{$avg:'$age'}}},
	   {$sort:{avg_age:1}}
	)
        
---------------------------------------------------------------------------
